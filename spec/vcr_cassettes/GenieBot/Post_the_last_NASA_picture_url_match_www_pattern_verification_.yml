---
http_interactions:
- request:
    method: get
    uri: https://www.nasa.gov/rss/dyn/lg_image_of_the_day.rss
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/rss+xml; charset=utf-8
      Content-Length:
      - '9984'
      Connection:
      - keep-alive
      Cache-Control:
      - max-age=120, public
      Content-Language:
      - en
      Date:
      - Tue, 21 Jan 2020 21:02:18 GMT
      Server:
      - NASA
      X-Content-Type-Options:
      - nosniff
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      - SAMEORIGIN
      X-Nginx-Cache-Status:
      - HIT
      X-Xss-Protection:
      - 1; mode=block
      Vary:
      - Accept-Encoding
      Strict-Transport-Security:
      - max-age=31536000
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 982dd7ed309ab3025635ef6f0ff61e82.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - MIA3-C1
      X-Amz-Cf-Id:
      - 8Uc4yggOqLLPqBx6hL77KzyCp1zhQ1wNOG1rBM2J468Bclr6h6_9bA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 21 Jan 2020 21:03:12 GMT
recorded_with: VCR 5.0.0
